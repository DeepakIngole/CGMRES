#define _USE_MATH_DEFINES

#include <eigen3/Eigen/Dense>
#include <cmath>

class nmpc_model {
private:
	/* declare parameters of the model here */
	const int dimx = 4;
	const int dimu = 2;

	/* parametern in the model */
	const double m1 = 0.2;
	const double m2 = 0.7;
	const double l1 = 0.3;
	const double l2 = 0.3;
	const double d1 = 0.15;
	const double d2 = 0.257;
	const double J1 = 0.006;
	const double J2 = 0.051;
	const double g = 9.80665;

	/* parameters in cost the function */
	const double q[4] = {1, 1, 0.01, 0.01};
	const double r[2] = {0.01, 0.01};
	const double sf[4] = {1, 1, 0.01, 0.01};
	const double xf[4] = {M_PI, 0, 0, 0};

public:
	nmpc_model(/* args */);
	~nmpc_model();
	void phix(const double t, const Eigen::VectorXd& x, Eigen::VectorXd& lmd);
	void statefunc(const double t, const Eigen::VectorXd& x, const Eigen::VectorXd& u, Eigen::VectorXd& a);
    void hxfunc(const double t, const Eigen::VectorXd& x, const Eigen::VectorXd& u, const Eigen::VectorXd& lmd, Eigen::VectorXd& hx);
	void hufunc(const double t, const Eigen::VectorXd& x, const Eigen::VectorXd& u, const Eigen::VectorXd& lmd, Eigen::VectorXd& hu);
};


void nmpc_model::phix(const double t, const Eigen::VectorXd& x, Eigen::VectorXd& lmd)
{
	phx1[0] = (x[0] - xf[0]) * sf[0];
	phx1[1] = (x[1] - xf[1]) * sf[1];
	phx1[2] = (x[2] - xf[2]) * sf[2];
	phx1[3] = (x[3] - xf[3]) * sf[3];
}


void nmpc_model::statefunc(const double t, const Eigen::VectorXd& x, const Eigen::VectorXd& u, Eigen::VectorXd& a)
{
	a[0] = (-d2 * l1 * m2 * cos(x[0]) * cos(x[0] + x[1]) * x[3] - sin(x[0]) * sin(x[0] + x[1]) * d2 * l1 * m2 * x[3] + (d2 * d2 * m2 + J2) * (x[2] - x[3])) / (-(0.2e1 * pow(cos(x[0]), 0.2e1) - 0.1e1) * l1 * l1 * m2 * m2 * d2 * d2 * pow(cos(x[0] + x[1]), 0.2e1) - 0.2e1 * cos(x[0]) * cos(x[0] + x[1]) * sin(x[0]) * sin(x[0] + x[1]) * d2 * d2 * l1 * l1 * m2 * m2 + pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1));
	a[1] = (-cos(x[0]) * d2 * l1 * m2 * (x[2] - 0.2e1 * x[3]) * cos(x[0] + x[1]) - sin(x[0]) * d2 * l1 * m2 * (x[2] - 0.2e1 * x[3]) * sin(x[0] + x[1]) + ((-x[2] + x[3]) * d2 * d2 + x[3] * l1 * l1) * m2 + (d1 * d1 * m1 + J1 + J2) * x[3] - J2 * x[2]) / (-(0.2e1 * pow(cos(x[0]), 0.2e1) - 0.1e1) * l1 * l1 * m2 * m2 * d2 * d2 * pow(cos(x[0] + x[1]), 0.2e1) - 0.2e1 * cos(x[0]) * cos(x[0] + x[1]) * sin(x[0]) * sin(x[0] + x[1]) * d2 * d2 * l1 * l1 * m2 * m2 + pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1));
	a[2] = -g * (sin(x[0]) * d1 * m1 + sin(x[0]) * l1 * m2 + sin(x[0] + x[1]) * d2 * m2) + u[0];
	a[3] = -0.8e1 * d2 * (-cos(x[0]) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * pow(d2, 0.4e1) * g * sin(x[0]) * pow(m2, 0.4e1) * pow(l1, 0.4e1) * pow(cos(x[0] + x[1]), 0.5e1) + sin(x[0] + x[1]) * pow(d2, 0.4e1) * g * pow(l1, 0.4e1) * pow(m2, 0.4e1) * (0.1e1 / 0.8e1 + pow(cos(x[0]), 0.4e1) - pow(cos(x[0]), 0.2e1)) * pow(cos(x[0] + x[1]), 0.4e1) + 0.3e1 / 0.2e1 * d2 * d2 * sin(x[0]) * m2 * m2 * l1 * l1 * (pow(cos(x[0]), 0.3e1) * d2 * d2 * g * l1 * l1 * m2 * m2 - l1 * x[3] * (x[2] - x[3]) * pow(cos(x[0]), 0.2e1) / 0.3e1 + g * (-d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * cos(x[0]) / 0.3e1 + x[3] * l1 * (x[2] - x[3]) / 0.12e2) * pow(cos(x[0] + x[1]), 0.3e1) - d2 * m2 * (d2 * (pow(cos(x[0]), 0.4e1) * d2 * d2 * g * l1 * l1 * m2 * m2 - l1 * x[3] * (x[2] - x[3]) * pow(cos(x[0]), 0.3e1) / 0.2e1 + (-0.3e1 / 0.4e1 * d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 / 0.2e1 + J2 * (d1 * d1 * m1 + J1) / 0.2e1) * g * pow(cos(x[0]), 0.2e1) + 0.3e1 / 0.8e1 * l1 * x[3] * (x[2] - x[3]) * cos(x[0]) - g * (((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) / 0.4e1) * m2 * sin(x[0] + x[1]) - ((pow(x[3], 0.2e1) * l1 * l1 + d2 * d2 * pow(x[2] - x[3], 0.2e1)) * m2 / 0.4e1 + pow(x[2] - x[3], 0.2e1) * J2 / 0.4e1 + pow(x[3], 0.2e1) * (d1 * d1 * m1 + J1) / 0.4e1) * cos(x[0]) * sin(x[0])) * l1 * l1 * pow(cos(x[0] + x[1]), 0.2e1) - (((pow(x[3], 0.2e1) * l1 * l1 + d2 * d2 * pow(x[2] - x[3], 0.2e1)) * m2 / 0.2e1 + pow(x[2] - x[3], 0.2e1) * J2 / 0.2e1 + pow(x[3], 0.2e1) * (d1 * d1 * m1 + J1) / 0.2e1) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * d2 * m2 * l1 * sin(x[0] + x[1]) / 0.2e1 + sin(x[0]) * (pow(cos(x[0]), 0.3e1) * pow(d2, 0.4e1) * g * pow(l1, 0.3e1) * pow(m2, 0.4e1) - 0.3e1 / 0.4e1 * d2 * d2 * l1 * l1 * m2 * m2 * x[3] * (x[2] - x[3]) * pow(cos(x[0]), 0.2e1) + (((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * d2 * d2 * g * m2 * m2 * l1 * cos(x[0]) + x[3] * (x[2] - x[3]) * (0.2e1 * d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) / 0.4e1) / 0.2e1) * l1 * cos(x[0] + x[1]) + (pow(cos(x[0]), 0.4e1) * pow(d2, 0.4e1) * g * pow(l1, 0.4e1) * pow(m2, 0.4e1) / 0.8e1 - d2 * d2 * pow(l1, 0.3e1) * m2 * m2 * x[3] * (x[2] - x[3]) * pow(cos(x[0]), 0.3e1) / 0.8e1 + (((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 / 0.4e1 + J2 * (d1 * d1 * m1 + J1) / 0.4e1) * d2 * d2 * g * m2 * m2 * l1 * l1 * pow(cos(x[0]), 0.2e1) + x[3] * (x[2] - x[3]) * l1 * (0.2e1 * d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * cos(x[0]) / 0.8e1 + g * pow(((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1), 0.2e1) / 0.8e1) * sin(x[0] + x[1]) - ((pow(x[3], 0.2e1) * l1 * l1 + d2 * d2 * pow(x[2] - x[3], 0.2e1)) * m2 / 0.8e1 + pow(x[2] - x[3], 0.2e1) * J2 / 0.8e1 + pow(x[3], 0.2e1) * (d1 * d1 * m1 + J1) / 0.8e1) * cos(x[0]) * d2 * sin(x[0]) * m2 * l1 * l1) * m2 / (0.8e1 * pow(l1, 0.4e1) * pow(m2, 0.4e1) * (0.1e1 / 0.8e1 + pow(cos(x[0]), 0.4e1) - pow(cos(x[0]), 0.2e1)) * pow(d2, 0.4e1) * pow(cos(x[0] + x[1]), 0.4e1) + 0.8e1 * pow(l1, 0.4e1) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * sin(x[0]) * pow(m2, 0.4e1) * cos(x[0]) * sin(x[0] + x[1]) * pow(d2, 0.4e1) * pow(cos(x[0] + x[1]), 0.3e1) - 0.8e1 * l1 * l1 * m2 * m2 * (pow(cos(x[0]), 0.4e1) * d2 * d2 * l1 * l1 * m2 * m2 + (-0.3e1 / 0.4e1 * d2 * d2 * m2 * m2 * l1 * l1 + (J2 * l1 * l1 / 0.2e1 + (d1 * d1 * m1 / 0.2e1 + J1 / 0.2e1) * d2 * d2) * m2 + J2 * (d1 * d1 * m1 + J1) / 0.2e1) * pow(cos(x[0]), 0.2e1) + (-J2 * l1 * l1 / 0.4e1 - (d1 * d1 * m1 / 0.4e1 + J1 / 0.4e1) * d2 * d2) * m2 - J2 * (d1 * d1 * m1 + J1) / 0.4e1) * d2 * d2 * pow(cos(x[0] + x[1]), 0.2e1) - 0.4e1 * l1 * l1 * sin(x[0]) * m2 * m2 * cos(x[0]) * (pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * sin(x[0] + x[1]) * d2 * d2 * cos(x[0] + x[1]) + pow(pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1), 0.2e1)) + u[1];
}


void nmpc_model::hxfunc(const double t, const Eigen::VectorXd& x, const Eigen::VectorXd& u, const Eigen::VectorXd& lmd, Eigen::VectorXd& hx)
{
	hx[0] = -(x[0] - xf[0]) * q[0] + lmd[0] * (-d2 * l1 * m2 * cos(x[0]) * cos(x[0] + x[1]) * x[3] - sin(x[0]) * sin(x[0] + x[1]) * d2 * l1 * m2 * x[3] + (d2 * d2 * m2 + J2) * (x[2] - x[3])) * pow(-(0.2e1 * pow(cos(x[0]), 0.2e1) - 0.1e1) * l1 * l1 * m2 * m2 * d2 * d2 * pow(cos(x[0] + x[1]), 0.2e1) - 0.2e1 * cos(x[0]) * cos(x[0] + x[1]) * sin(x[0]) * sin(x[0] + x[1]) * d2 * d2 * l1 * l1 * m2 * m2 + pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1), -0.2e1) * (0.2e1 * cos(x[0]) * sin(x[0]) * l1 * l1 * m2 * m2 * d2 * d2 * pow(cos(x[0] + x[1]), 0.2e1) + 0.2e1 * (0.2e1 * pow(cos(x[0]), 0.2e1) - 0.1e1) * l1 * l1 * m2 * m2 * d2 * d2 * cos(x[0] + x[1]) * sin(x[0] + x[1]) + 0.2e1 * pow(sin(x[0]), 0.2e1) * cos(x[0] + x[1]) * sin(x[0] + x[1]) * d2 * d2 * l1 * l1 * m2 * m2 + 0.2e1 * cos(x[0]) * pow(sin(x[0] + x[1]), 0.2e1) * sin(x[0]) * d2 * d2 * l1 * l1 * m2 * m2 - 0.2e1 * pow(cos(x[0]), 0.2e1) * cos(x[0] + x[1]) * sin(x[0] + x[1]) * d2 * d2 * l1 * l1 * m2 * m2 - 0.2e1 * cos(x[0]) * d2 * d2 * l1 * l1 * m2 * m2 * sin(x[0])) + lmd[1] * (-cos(x[0]) * d2 * l1 * m2 * (x[2] - 0.2e1 * x[3]) * cos(x[0] + x[1]) - sin(x[0]) * d2 * l1 * m2 * (x[2] - 0.2e1 * x[3]) * sin(x[0] + x[1]) + ((-x[2] + x[3]) * d2 * d2 + x[3] * l1 * l1) * m2 + (d1 * d1 * m1 + J1 + J2) * x[3] - J2 * x[2]) * pow(-(0.2e1 * pow(cos(x[0]), 0.2e1) - 0.1e1) * l1 * l1 * m2 * m2 * d2 * d2 * pow(cos(x[0] + x[1]), 0.2e1) - 0.2e1 * cos(x[0]) * cos(x[0] + x[1]) * sin(x[0]) * sin(x[0] + x[1]) * d2 * d2 * l1 * l1 * m2 * m2 + pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1), -0.2e1) * (0.2e1 * cos(x[0]) * sin(x[0]) * l1 * l1 * m2 * m2 * d2 * d2 * pow(cos(x[0] + x[1]), 0.2e1) + 0.2e1 * (0.2e1 * pow(cos(x[0]), 0.2e1) - 0.1e1) * l1 * l1 * m2 * m2 * d2 * d2 * cos(x[0] + x[1]) * sin(x[0] + x[1]) + 0.2e1 * pow(sin(x[0]), 0.2e1) * cos(x[0] + x[1]) * sin(x[0] + x[1]) * d2 * d2 * l1 * l1 * m2 * m2 + 0.2e1 * cos(x[0]) * pow(sin(x[0] + x[1]), 0.2e1) * sin(x[0]) * d2 * d2 * l1 * l1 * m2 * m2 - 0.2e1 * pow(cos(x[0]), 0.2e1) * cos(x[0] + x[1]) * sin(x[0] + x[1]) * d2 * d2 * l1 * l1 * m2 * m2 - 0.2e1 * cos(x[0]) * d2 * d2 * l1 * l1 * m2 * m2 * sin(x[0])) + lmd[2] * g * (cos(x[0]) * d1 * m1 + cos(x[0]) * l1 * m2 + cos(x[0] + x[1]) * d2 * m2) - lmd[3] * (-0.8e1 * d2 * (pow(sin(x[0]), 0.2e1) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * pow(d2, 0.4e1) * g * pow(m2, 0.4e1) * pow(l1, 0.4e1) * pow(cos(x[0] + x[1]), 0.5e1) + 0.2e1 * pow(cos(x[0]), 0.2e1) * pow(sin(x[0]), 0.2e1) * pow(d2, 0.4e1) * g * pow(m2, 0.4e1) * pow(l1, 0.4e1) * pow(cos(x[0] + x[1]), 0.5e1) - pow(cos(x[0]), 0.2e1) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * pow(d2, 0.4e1) * g * pow(m2, 0.4e1) * pow(l1, 0.4e1) * pow(cos(x[0] + x[1]), 0.5e1) + 0.5e1 * cos(x[0]) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * pow(d2, 0.4e1) * g * sin(x[0]) * pow(m2, 0.4e1) * pow(l1, 0.4e1) * pow(cos(x[0] + x[1]), 0.4e1) * sin(x[0] + x[1]) + pow(cos(x[0] + x[1]), 0.5e1) * pow(d2, 0.4e1) * g * pow(l1, 0.4e1) * pow(m2, 0.4e1) * (0.1e1 / 0.8e1 + pow(cos(x[0]), 0.4e1) - pow(cos(x[0]), 0.2e1)) + sin(x[0] + x[1]) * pow(d2, 0.4e1) * g * pow(l1, 0.4e1) * pow(m2, 0.4e1) * (-0.4e1 * pow(cos(x[0]), 0.3e1) * sin(x[0]) + 0.2e1 * cos(x[0]) * sin(x[0])) * pow(cos(x[0] + x[1]), 0.4e1) - 0.4e1 * pow(sin(x[0] + x[1]), 0.2e1) * pow(d2, 0.4e1) * g * pow(l1, 0.4e1) * pow(m2, 0.4e1) * (0.1e1 / 0.8e1 + pow(cos(x[0]), 0.4e1) - pow(cos(x[0]), 0.2e1)) * pow(cos(x[0] + x[1]), 0.3e1) + 0.3e1 / 0.2e1 * d2 * d2 * cos(x[0]) * m2 * m2 * l1 * l1 * (pow(cos(x[0]), 0.3e1) * d2 * d2 * g * l1 * l1 * m2 * m2 - l1 * x[3] * (x[2] - x[3]) * pow(cos(x[0]), 0.2e1) / 0.3e1 + g * (-d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * cos(x[0]) / 0.3e1 + x[3] * l1 * (x[2] - x[3]) / 0.12e2) * pow(cos(x[0] + x[1]), 0.3e1) + 0.3e1 / 0.2e1 * d2 * d2 * sin(x[0]) * m2 * m2 * l1 * l1 * (-0.3e1 * pow(cos(x[0]), 0.2e1) * d2 * d2 * g * l1 * l1 * m2 * m2 * sin(x[0]) + 0.2e1 / 0.3e1 * l1 * x[3] * (x[2] - x[3]) * cos(x[0]) * sin(x[0]) - g * (-d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * sin(x[0]) / 0.3e1) * pow(cos(x[0] + x[1]), 0.3e1) - 0.9e1 / 0.2e1 * d2 * d2 * sin(x[0]) * m2 * m2 * l1 * l1 * (pow(cos(x[0]), 0.3e1) * d2 * d2 * g * l1 * l1 * m2 * m2 - l1 * x[3] * (x[2] - x[3]) * pow(cos(x[0]), 0.2e1) / 0.3e1 + g * (-d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * cos(x[0]) / 0.3e1 + x[3] * l1 * (x[2] - x[3]) / 0.12e2) * pow(cos(x[0] + x[1]), 0.2e1) * sin(x[0] + x[1]) - d2 * m2 * (d2 * (-0.4e1 * pow(cos(x[0]), 0.3e1) * d2 * d2 * g * l1 * l1 * m2 * m2 * sin(x[0]) + 0.3e1 / 0.2e1 * l1 * x[3] * (x[2] - x[3]) * pow(cos(x[0]), 0.2e1) * sin(x[0]) - 0.2e1 * (-0.3e1 / 0.4e1 * d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 / 0.2e1 + J2 * (d1 * d1 * m1 + J1) / 0.2e1) * g * cos(x[0]) * sin(x[0]) - 0.3e1 / 0.8e1 * l1 * x[3] * (x[2] - x[3]) * sin(x[0])) * m2 * sin(x[0] + x[1]) + d2 * (pow(cos(x[0]), 0.4e1) * d2 * d2 * g * l1 * l1 * m2 * m2 - l1 * x[3] * (x[2] - x[3]) * pow(cos(x[0]), 0.3e1) / 0.2e1 + (-0.3e1 / 0.4e1 * d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 / 0.2e1 + J2 * (d1 * d1 * m1 + J1) / 0.2e1) * g * pow(cos(x[0]), 0.2e1) + 0.3e1 / 0.8e1 * l1 * x[3] * (x[2] - x[3]) * cos(x[0]) - g * (((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) / 0.4e1) * m2 * cos(x[0] + x[1]) + ((pow(x[3], 0.2e1) * l1 * l1 + d2 * d2 * pow(x[2] - x[3], 0.2e1)) * m2 / 0.4e1 + pow(x[2] - x[3], 0.2e1) * J2 / 0.4e1 + pow(x[3], 0.2e1) * (d1 * d1 * m1 + J1) / 0.4e1) * pow(sin(x[0]), 0.2e1) - ((pow(x[3], 0.2e1) * l1 * l1 + d2 * d2 * pow(x[2] - x[3], 0.2e1)) * m2 / 0.4e1 + pow(x[2] - x[3], 0.2e1) * J2 / 0.4e1 + pow(x[3], 0.2e1) * (d1 * d1 * m1 + J1) / 0.4e1) * pow(cos(x[0]), 0.2e1)) * l1 * l1 * pow(cos(x[0] + x[1]), 0.2e1) + 0.2e1 * d2 * m2 * (d2 * (pow(cos(x[0]), 0.4e1) * d2 * d2 * g * l1 * l1 * m2 * m2 - l1 * x[3] * (x[2] - x[3]) * pow(cos(x[0]), 0.3e1) / 0.2e1 + (-0.3e1 / 0.4e1 * d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 / 0.2e1 + J2 * (d1 * d1 * m1 + J1) / 0.2e1) * g * pow(cos(x[0]), 0.2e1) + 0.3e1 / 0.8e1 * l1 * x[3] * (x[2] - x[3]) * cos(x[0]) - g * (((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) / 0.4e1) * m2 * sin(x[0] + x[1]) - ((pow(x[3], 0.2e1) * l1 * l1 + d2 * d2 * pow(x[2] - x[3], 0.2e1)) * m2 / 0.4e1 + pow(x[2] - x[3], 0.2e1) * J2 / 0.4e1 + pow(x[3], 0.2e1) * (d1 * d1 * m1 + J1) / 0.4e1) * cos(x[0]) * sin(x[0])) * l1 * l1 * cos(x[0] + x[1]) * sin(x[0] + x[1]) - (-((pow(x[3], 0.2e1) * l1 * l1 + d2 * d2 * pow(x[2] - x[3], 0.2e1)) * m2 / 0.2e1 + pow(x[2] - x[3], 0.2e1) * J2 / 0.2e1 + pow(x[3], 0.2e1) * (d1 * d1 * m1 + J1) / 0.2e1) * cos(x[0]) * sin(x[0]) * d2 * m2 * l1 * sin(x[0] + x[1]) + ((pow(x[3], 0.2e1) * l1 * l1 + d2 * d2 * pow(x[2] - x[3], 0.2e1)) * m2 / 0.2e1 + pow(x[2] - x[3], 0.2e1) * J2 / 0.2e1 + pow(x[3], 0.2e1) * (d1 * d1 * m1 + J1) / 0.2e1) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * d2 * m2 * l1 * cos(x[0] + x[1]) / 0.2e1 + cos(x[0]) * (pow(cos(x[0]), 0.3e1) * pow(d2, 0.4e1) * g * pow(l1, 0.3e1) * pow(m2, 0.4e1) - 0.3e1 / 0.4e1 * d2 * d2 * l1 * l1 * m2 * m2 * x[3] * (x[2] - x[3]) * pow(cos(x[0]), 0.2e1) + (((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * d2 * d2 * g * m2 * m2 * l1 * cos(x[0]) + x[3] * (x[2] - x[3]) * (0.2e1 * d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) / 0.4e1) / 0.2e1 + sin(x[0]) * (-0.3e1 * pow(cos(x[0]), 0.2e1) * pow(d2, 0.4e1) * g * pow(l1, 0.3e1) * pow(m2, 0.4e1) * sin(x[0]) + 0.3e1 / 0.2e1 * d2 * d2 * l1 * l1 * m2 * m2 * x[3] * (x[2] - x[3]) * cos(x[0]) * sin(x[0]) - (((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * d2 * d2 * g * m2 * m2 * l1 * sin(x[0])) / 0.2e1) * l1 * cos(x[0] + x[1]) + (((pow(x[3], 0.2e1) * l1 * l1 + d2 * d2 * pow(x[2] - x[3], 0.2e1)) * m2 / 0.2e1 + pow(x[2] - x[3], 0.2e1) * J2 / 0.2e1 + pow(x[3], 0.2e1) * (d1 * d1 * m1 + J1) / 0.2e1) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * d2 * m2 * l1 * sin(x[0] + x[1]) / 0.2e1 + sin(x[0]) * (pow(cos(x[0]), 0.3e1) * pow(d2, 0.4e1) * g * pow(l1, 0.3e1) * pow(m2, 0.4e1) - 0.3e1 / 0.4e1 * d2 * d2 * l1 * l1 * m2 * m2 * x[3] * (x[2] - x[3]) * pow(cos(x[0]), 0.2e1) + (((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * d2 * d2 * g * m2 * m2 * l1 * cos(x[0]) + x[3] * (x[2] - x[3]) * (0.2e1 * d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) / 0.4e1) / 0.2e1) * l1 * sin(x[0] + x[1]) + (-pow(cos(x[0]), 0.3e1) * pow(d2, 0.4e1) * g * pow(l1, 0.4e1) * pow(m2, 0.4e1) * sin(x[0]) / 0.2e1 + 0.3e1 / 0.8e1 * d2 * d2 * pow(l1, 0.3e1) * m2 * m2 * x[3] * (x[2] - x[3]) * pow(cos(x[0]), 0.2e1) * sin(x[0]) - 0.2e1 * (((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 / 0.4e1 + J2 * (d1 * d1 * m1 + J1) / 0.4e1) * d2 * d2 * g * m2 * m2 * l1 * l1 * cos(x[0]) * sin(x[0]) - x[3] * (x[2] - x[3]) * l1 * (0.2e1 * d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * sin(x[0]) / 0.8e1) * sin(x[0] + x[1]) + (pow(cos(x[0]), 0.4e1) * pow(d2, 0.4e1) * g * pow(l1, 0.4e1) * pow(m2, 0.4e1) / 0.8e1 - d2 * d2 * pow(l1, 0.3e1) * m2 * m2 * x[3] * (x[2] - x[3]) * pow(cos(x[0]), 0.3e1) / 0.8e1 + (((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 / 0.4e1 + J2 * (d1 * d1 * m1 + J1) / 0.4e1) * d2 * d2 * g * m2 * m2 * l1 * l1 * pow(cos(x[0]), 0.2e1) + x[3] * (x[2] - x[3]) * l1 * (0.2e1 * d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * cos(x[0]) / 0.8e1 + g * pow(((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1), 0.2e1) / 0.8e1) * cos(x[0] + x[1]) + ((pow(x[3], 0.2e1) * l1 * l1 + d2 * d2 * pow(x[2] - x[3], 0.2e1)) * m2 / 0.8e1 + pow(x[2] - x[3], 0.2e1) * J2 / 0.8e1 + pow(x[3], 0.2e1) * (d1 * d1 * m1 + J1) / 0.8e1) * pow(sin(x[0]), 0.2e1) * d2 * m2 * l1 * l1 - ((pow(x[3], 0.2e1) * l1 * l1 + d2 * d2 * pow(x[2] - x[3], 0.2e1)) * m2 / 0.8e1 + pow(x[2] - x[3], 0.2e1) * J2 / 0.8e1 + pow(x[3], 0.2e1) * (d1 * d1 * m1 + J1) / 0.8e1) * pow(cos(x[0]), 0.2e1) * d2 * m2 * l1 * l1) * m2 / (0.8e1 * pow(l1, 0.4e1) * pow(m2, 0.4e1) * (0.1e1 / 0.8e1 + pow(cos(x[0]), 0.4e1) - pow(cos(x[0]), 0.2e1)) * pow(d2, 0.4e1) * pow(cos(x[0] + x[1]), 0.4e1) + 0.8e1 * pow(l1, 0.4e1) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * sin(x[0]) * pow(m2, 0.4e1) * cos(x[0]) * sin(x[0] + x[1]) * pow(d2, 0.4e1) * pow(cos(x[0] + x[1]), 0.3e1) - 0.8e1 * l1 * l1 * m2 * m2 * (pow(cos(x[0]), 0.4e1) * d2 * d2 * l1 * l1 * m2 * m2 + (-0.3e1 / 0.4e1 * d2 * d2 * m2 * m2 * l1 * l1 + (J2 * l1 * l1 / 0.2e1 + (d1 * d1 * m1 / 0.2e1 + J1 / 0.2e1) * d2 * d2) * m2 + J2 * (d1 * d1 * m1 + J1) / 0.2e1) * pow(cos(x[0]), 0.2e1) + (-J2 * l1 * l1 / 0.4e1 - (d1 * d1 * m1 / 0.4e1 + J1 / 0.4e1) * d2 * d2) * m2 - J2 * (d1 * d1 * m1 + J1) / 0.4e1) * d2 * d2 * pow(cos(x[0] + x[1]), 0.2e1) - 0.4e1 * l1 * l1 * sin(x[0]) * m2 * m2 * cos(x[0]) * (pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * sin(x[0] + x[1]) * d2 * d2 * cos(x[0] + x[1]) + pow(pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1), 0.2e1)) + 0.8e1 * d2 * (-cos(x[0]) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * pow(d2, 0.4e1) * g * sin(x[0]) * pow(m2, 0.4e1) * pow(l1, 0.4e1) * pow(cos(x[0] + x[1]), 0.5e1) + sin(x[0] + x[1]) * pow(d2, 0.4e1) * g * pow(l1, 0.4e1) * pow(m2, 0.4e1) * (0.1e1 / 0.8e1 + pow(cos(x[0]), 0.4e1) - pow(cos(x[0]), 0.2e1)) * pow(cos(x[0] + x[1]), 0.4e1) + 0.3e1 / 0.2e1 * d2 * d2 * sin(x[0]) * m2 * m2 * l1 * l1 * (pow(cos(x[0]), 0.3e1) * d2 * d2 * g * l1 * l1 * m2 * m2 - l1 * x[3] * (x[2] - x[3]) * pow(cos(x[0]), 0.2e1) / 0.3e1 + g * (-d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * cos(x[0]) / 0.3e1 + x[3] * l1 * (x[2] - x[3]) / 0.12e2) * pow(cos(x[0] + x[1]), 0.3e1) - d2 * m2 * (d2 * (pow(cos(x[0]), 0.4e1) * d2 * d2 * g * l1 * l1 * m2 * m2 - l1 * x[3] * (x[2] - x[3]) * pow(cos(x[0]), 0.3e1) / 0.2e1 + (-0.3e1 / 0.4e1 * d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 / 0.2e1 + J2 * (d1 * d1 * m1 + J1) / 0.2e1) * g * pow(cos(x[0]), 0.2e1) + 0.3e1 / 0.8e1 * l1 * x[3] * (x[2] - x[3]) * cos(x[0]) - g * (((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) / 0.4e1) * m2 * sin(x[0] + x[1]) - ((pow(x[3], 0.2e1) * l1 * l1 + d2 * d2 * pow(x[2] - x[3], 0.2e1)) * m2 / 0.4e1 + pow(x[2] - x[3], 0.2e1) * J2 / 0.4e1 + pow(x[3], 0.2e1) * (d1 * d1 * m1 + J1) / 0.4e1) * cos(x[0]) * sin(x[0])) * l1 * l1 * pow(cos(x[0] + x[1]), 0.2e1) - (((pow(x[3], 0.2e1) * l1 * l1 + d2 * d2 * pow(x[2] - x[3], 0.2e1)) * m2 / 0.2e1 + pow(x[2] - x[3], 0.2e1) * J2 / 0.2e1 + pow(x[3], 0.2e1) * (d1 * d1 * m1 + J1) / 0.2e1) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * d2 * m2 * l1 * sin(x[0] + x[1]) / 0.2e1 + sin(x[0]) * (pow(cos(x[0]), 0.3e1) * pow(d2, 0.4e1) * g * pow(l1, 0.3e1) * pow(m2, 0.4e1) - 0.3e1 / 0.4e1 * d2 * d2 * l1 * l1 * m2 * m2 * x[3] * (x[2] - x[3]) * pow(cos(x[0]), 0.2e1) + (((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * d2 * d2 * g * m2 * m2 * l1 * cos(x[0]) + x[3] * (x[2] - x[3]) * (0.2e1 * d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) / 0.4e1) / 0.2e1) * l1 * cos(x[0] + x[1]) + (pow(cos(x[0]), 0.4e1) * pow(d2, 0.4e1) * g * pow(l1, 0.4e1) * pow(m2, 0.4e1) / 0.8e1 - d2 * d2 * pow(l1, 0.3e1) * m2 * m2 * x[3] * (x[2] - x[3]) * pow(cos(x[0]), 0.3e1) / 0.8e1 + (((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 / 0.4e1 + J2 * (d1 * d1 * m1 + J1) / 0.4e1) * d2 * d2 * g * m2 * m2 * l1 * l1 * pow(cos(x[0]), 0.2e1) + x[3] * (x[2] - x[3]) * l1 * (0.2e1 * d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * cos(x[0]) / 0.8e1 + g * pow(((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1), 0.2e1) / 0.8e1) * sin(x[0] + x[1]) - ((pow(x[3], 0.2e1) * l1 * l1 + d2 * d2 * pow(x[2] - x[3], 0.2e1)) * m2 / 0.8e1 + pow(x[2] - x[3], 0.2e1) * J2 / 0.8e1 + pow(x[3], 0.2e1) * (d1 * d1 * m1 + J1) / 0.8e1) * cos(x[0]) * d2 * sin(x[0]) * m2 * l1 * l1) * m2 * pow(0.8e1 * pow(l1, 0.4e1) * pow(m2, 0.4e1) * (0.1e1 / 0.8e1 + pow(cos(x[0]), 0.4e1) - pow(cos(x[0]), 0.2e1)) * pow(d2, 0.4e1) * pow(cos(x[0] + x[1]), 0.4e1) + 0.8e1 * pow(l1, 0.4e1) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * sin(x[0]) * pow(m2, 0.4e1) * cos(x[0]) * sin(x[0] + x[1]) * pow(d2, 0.4e1) * pow(cos(x[0] + x[1]), 0.3e1) - 0.8e1 * l1 * l1 * m2 * m2 * (pow(cos(x[0]), 0.4e1) * d2 * d2 * l1 * l1 * m2 * m2 + (-0.3e1 / 0.4e1 * d2 * d2 * m2 * m2 * l1 * l1 + (J2 * l1 * l1 / 0.2e1 + (d1 * d1 * m1 / 0.2e1 + J1 / 0.2e1) * d2 * d2) * m2 + J2 * (d1 * d1 * m1 + J1) / 0.2e1) * pow(cos(x[0]), 0.2e1) + (-J2 * l1 * l1 / 0.4e1 - (d1 * d1 * m1 / 0.4e1 + J1 / 0.4e1) * d2 * d2) * m2 - J2 * (d1 * d1 * m1 + J1) / 0.4e1) * d2 * d2 * pow(cos(x[0] + x[1]), 0.2e1) - 0.4e1 * l1 * l1 * sin(x[0]) * m2 * m2 * cos(x[0]) * (pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * sin(x[0] + x[1]) * d2 * d2 * cos(x[0] + x[1]) + pow(pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1), 0.2e1), -0.2e1) * (0.8e1 * pow(l1, 0.4e1) * pow(m2, 0.4e1) * (-0.4e1 * pow(cos(x[0]), 0.3e1) * sin(x[0]) + 0.2e1 * cos(x[0]) * sin(x[0])) * pow(d2, 0.4e1) * pow(cos(x[0] + x[1]), 0.4e1) - 0.32e2 * pow(l1, 0.4e1) * pow(m2, 0.4e1) * (0.1e1 / 0.8e1 + pow(cos(x[0]), 0.4e1) - pow(cos(x[0]), 0.2e1)) * pow(d2, 0.4e1) * pow(cos(x[0] + x[1]), 0.3e1) * sin(x[0] + x[1]) - 0.16e2 * pow(l1, 0.4e1) * pow(cos(x[0]), 0.2e1) * pow(sin(x[0]), 0.2e1) * pow(m2, 0.4e1) * sin(x[0] + x[1]) * pow(d2, 0.4e1) * pow(cos(x[0] + x[1]), 0.3e1) + 0.8e1 * pow(l1, 0.4e1) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * pow(cos(x[0]), 0.2e1) * pow(m2, 0.4e1) * sin(x[0] + x[1]) * pow(d2, 0.4e1) * pow(cos(x[0] + x[1]), 0.3e1) - 0.8e1 * pow(l1, 0.4e1) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * pow(sin(x[0]), 0.2e1) * pow(m2, 0.4e1) * sin(x[0] + x[1]) * pow(d2, 0.4e1) * pow(cos(x[0] + x[1]), 0.3e1) + 0.8e1 * pow(l1, 0.4e1) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * sin(x[0]) * pow(m2, 0.4e1) * cos(x[0]) * pow(cos(x[0] + x[1]), 0.4e1) * pow(d2, 0.4e1) - 0.24e2 * pow(l1, 0.4e1) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * sin(x[0]) * pow(m2, 0.4e1) * cos(x[0]) * pow(sin(x[0] + x[1]), 0.2e1) * pow(d2, 0.4e1) * pow(cos(x[0] + x[1]), 0.2e1) - 0.8e1 * l1 * l1 * m2 * m2 * (-0.4e1 * pow(cos(x[0]), 0.3e1) * d2 * d2 * l1 * l1 * m2 * m2 * sin(x[0]) - 0.2e1 * (-0.3e1 / 0.4e1 * d2 * d2 * m2 * m2 * l1 * l1 + (J2 * l1 * l1 / 0.2e1 + (d1 * d1 * m1 / 0.2e1 + J1 / 0.2e1) * d2 * d2) * m2 + J2 * (d1 * d1 * m1 + J1) / 0.2e1) * cos(x[0]) * sin(x[0])) * d2 * d2 * pow(cos(x[0] + x[1]), 0.2e1) + 0.16e2 * l1 * l1 * m2 * m2 * (pow(cos(x[0]), 0.4e1) * d2 * d2 * l1 * l1 * m2 * m2 + (-0.3e1 / 0.4e1 * d2 * d2 * m2 * m2 * l1 * l1 + (J2 * l1 * l1 / 0.2e1 + (d1 * d1 * m1 / 0.2e1 + J1 / 0.2e1) * d2 * d2) * m2 + J2 * (d1 * d1 * m1 + J1) / 0.2e1) * pow(cos(x[0]), 0.2e1) + (-J2 * l1 * l1 / 0.4e1 - (d1 * d1 * m1 / 0.4e1 + J1 / 0.4e1) * d2 * d2) * m2 - J2 * (d1 * d1 * m1 + J1) / 0.4e1) * d2 * d2 * cos(x[0] + x[1]) * sin(x[0] + x[1]) - 0.4e1 * l1 * l1 * pow(cos(x[0]), 0.2e1) * m2 * m2 * (pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * sin(x[0] + x[1]) * d2 * d2 * cos(x[0] + x[1]) + 0.4e1 * l1 * l1 * pow(sin(x[0]), 0.2e1) * m2 * m2 * (pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * sin(x[0] + x[1]) * d2 * d2 * cos(x[0] + x[1]) + 0.8e1 * pow(l1, 0.4e1) * pow(sin(x[0]), 0.2e1) * pow(m2, 0.4e1) * pow(cos(x[0]), 0.2e1) * pow(d2, 0.4e1) * sin(x[0] + x[1]) * cos(x[0] + x[1]) - 0.4e1 * l1 * l1 * sin(x[0]) * m2 * m2 * cos(x[0]) * (pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * pow(cos(x[0] + x[1]), 0.2e1) * d2 * d2 + 0.4e1 * l1 * l1 * sin(x[0]) * m2 * m2 * cos(x[0]) * (pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * pow(sin(x[0] + x[1]), 0.2e1) * d2 * d2 - 0.4e1 * (pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * cos(x[0]) * d2 * d2 * l1 * l1 * m2 * m2 * sin(x[0])));
	hx[1] = -(x[1] - xf[1]) * q[1] - lmd[0] * (d2 * l1 * m2 * cos(x[0]) * sin(x[0] + x[1]) * x[3] - d2 * l1 * m2 * sin(x[0]) * cos(x[0] + x[1]) * x[3]) / (-(0.2e1 * pow(cos(x[0]), 0.2e1) - 0.1e1) * l1 * l1 * m2 * m2 * d2 * d2 * pow(cos(x[0] + x[1]), 0.2e1) - 0.2e1 * cos(x[0]) * cos(x[0] + x[1]) * sin(x[0]) * sin(x[0] + x[1]) * d2 * d2 * l1 * l1 * m2 * m2 + pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) + lmd[0] * (-d2 * l1 * m2 * cos(x[0]) * cos(x[0] + x[1]) * x[3] - sin(x[0]) * sin(x[0] + x[1]) * d2 * l1 * m2 * x[3] + (d2 * d2 * m2 + J2) * (x[2] - x[3])) * pow(-(0.2e1 * pow(cos(x[0]), 0.2e1) - 0.1e1) * l1 * l1 * m2 * m2 * d2 * d2 * pow(cos(x[0] + x[1]), 0.2e1) - 0.2e1 * cos(x[0]) * cos(x[0] + x[1]) * sin(x[0]) * sin(x[0] + x[1]) * d2 * d2 * l1 * l1 * m2 * m2 + pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1), -0.2e1) * (0.2e1 * (0.2e1 * pow(cos(x[0]), 0.2e1) - 0.1e1) * l1 * l1 * m2 * m2 * d2 * d2 * cos(x[0] + x[1]) * sin(x[0] + x[1]) + 0.2e1 * cos(x[0]) * pow(sin(x[0] + x[1]), 0.2e1) * sin(x[0]) * d2 * d2 * l1 * l1 * m2 * m2 - 0.2e1 * cos(x[0]) * sin(x[0]) * l1 * l1 * m2 * m2 * d2 * d2 * pow(cos(x[0] + x[1]), 0.2e1)) - lmd[1] * (cos(x[0]) * d2 * l1 * m2 * (x[2] - 0.2e1 * x[3]) * sin(x[0] + x[1]) - sin(x[0]) * d2 * l1 * m2 * (x[2] - 0.2e1 * x[3]) * cos(x[0] + x[1])) / (-(0.2e1 * pow(cos(x[0]), 0.2e1) - 0.1e1) * l1 * l1 * m2 * m2 * d2 * d2 * pow(cos(x[0] + x[1]), 0.2e1) - 0.2e1 * cos(x[0]) * cos(x[0] + x[1]) * sin(x[0]) * sin(x[0] + x[1]) * d2 * d2 * l1 * l1 * m2 * m2 + pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) + lmd[1] * (-cos(x[0]) * d2 * l1 * m2 * (x[2] - 0.2e1 * x[3]) * cos(x[0] + x[1]) - sin(x[0]) * d2 * l1 * m2 * (x[2] - 0.2e1 * x[3]) * sin(x[0] + x[1]) + ((-x[2] + x[3]) * d2 * d2 + x[3] * l1 * l1) * m2 + (d1 * d1 * m1 + J1 + J2) * x[3] - J2 * x[2]) * pow(-(0.2e1 * pow(cos(x[0]), 0.2e1) - 0.1e1) * l1 * l1 * m2 * m2 * d2 * d2 * pow(cos(x[0] + x[1]), 0.2e1) - 0.2e1 * cos(x[0]) * cos(x[0] + x[1]) * sin(x[0]) * sin(x[0] + x[1]) * d2 * d2 * l1 * l1 * m2 * m2 + pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1), -0.2e1) * (0.2e1 * (0.2e1 * pow(cos(x[0]), 0.2e1) - 0.1e1) * l1 * l1 * m2 * m2 * d2 * d2 * cos(x[0] + x[1]) * sin(x[0] + x[1]) + 0.2e1 * cos(x[0]) * pow(sin(x[0] + x[1]), 0.2e1) * sin(x[0]) * d2 * d2 * l1 * l1 * m2 * m2 - 0.2e1 * cos(x[0]) * sin(x[0]) * l1 * l1 * m2 * m2 * d2 * d2 * pow(cos(x[0] + x[1]), 0.2e1)) + lmd[2] * g * cos(x[0] + x[1]) * d2 * m2 - lmd[3] * (-0.8e1 * d2 * (0.5e1 * cos(x[0]) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * pow(d2, 0.4e1) * g * sin(x[0]) * pow(m2, 0.4e1) * pow(l1, 0.4e1) * pow(cos(x[0] + x[1]), 0.4e1) * sin(x[0] + x[1]) + pow(cos(x[0] + x[1]), 0.5e1) * pow(d2, 0.4e1) * g * pow(l1, 0.4e1) * pow(m2, 0.4e1) * (0.1e1 / 0.8e1 + pow(cos(x[0]), 0.4e1) - pow(cos(x[0]), 0.2e1)) - 0.4e1 * pow(sin(x[0] + x[1]), 0.2e1) * pow(d2, 0.4e1) * g * pow(l1, 0.4e1) * pow(m2, 0.4e1) * (0.1e1 / 0.8e1 + pow(cos(x[0]), 0.4e1) - pow(cos(x[0]), 0.2e1)) * pow(cos(x[0] + x[1]), 0.3e1) - 0.9e1 / 0.2e1 * d2 * d2 * sin(x[0]) * m2 * m2 * l1 * l1 * (pow(cos(x[0]), 0.3e1) * d2 * d2 * g * l1 * l1 * m2 * m2 - l1 * x[3] * (x[2] - x[3]) * pow(cos(x[0]), 0.2e1) / 0.3e1 + g * (-d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * cos(x[0]) / 0.3e1 + x[3] * l1 * (x[2] - x[3]) / 0.12e2) * pow(cos(x[0] + x[1]), 0.2e1) * sin(x[0] + x[1]) - d2 * d2 * m2 * m2 * (pow(cos(x[0]), 0.4e1) * d2 * d2 * g * l1 * l1 * m2 * m2 - l1 * x[3] * (x[2] - x[3]) * pow(cos(x[0]), 0.3e1) / 0.2e1 + (-0.3e1 / 0.4e1 * d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 / 0.2e1 + J2 * (d1 * d1 * m1 + J1) / 0.2e1) * g * pow(cos(x[0]), 0.2e1) + 0.3e1 / 0.8e1 * l1 * x[3] * (x[2] - x[3]) * cos(x[0]) - g * (((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) / 0.4e1) * pow(cos(x[0] + x[1]), 0.3e1) * l1 * l1 + 0.2e1 * d2 * m2 * (d2 * (pow(cos(x[0]), 0.4e1) * d2 * d2 * g * l1 * l1 * m2 * m2 - l1 * x[3] * (x[2] - x[3]) * pow(cos(x[0]), 0.3e1) / 0.2e1 + (-0.3e1 / 0.4e1 * d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 / 0.2e1 + J2 * (d1 * d1 * m1 + J1) / 0.2e1) * g * pow(cos(x[0]), 0.2e1) + 0.3e1 / 0.8e1 * l1 * x[3] * (x[2] - x[3]) * cos(x[0]) - g * (((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) / 0.4e1) * m2 * sin(x[0] + x[1]) - ((pow(x[3], 0.2e1) * l1 * l1 + d2 * d2 * pow(x[2] - x[3], 0.2e1)) * m2 / 0.4e1 + pow(x[2] - x[3], 0.2e1) * J2 / 0.4e1 + pow(x[3], 0.2e1) * (d1 * d1 * m1 + J1) / 0.4e1) * cos(x[0]) * sin(x[0])) * l1 * l1 * cos(x[0] + x[1]) * sin(x[0] + x[1]) - ((pow(x[3], 0.2e1) * l1 * l1 + d2 * d2 * pow(x[2] - x[3], 0.2e1)) * m2 / 0.2e1 + pow(x[2] - x[3], 0.2e1) * J2 / 0.2e1 + pow(x[3], 0.2e1) * (d1 * d1 * m1 + J1) / 0.2e1) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * d2 * m2 * l1 * l1 * pow(cos(x[0] + x[1]), 0.2e1) / 0.2e1 + (((pow(x[3], 0.2e1) * l1 * l1 + d2 * d2 * pow(x[2] - x[3], 0.2e1)) * m2 / 0.2e1 + pow(x[2] - x[3], 0.2e1) * J2 / 0.2e1 + pow(x[3], 0.2e1) * (d1 * d1 * m1 + J1) / 0.2e1) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * d2 * m2 * l1 * sin(x[0] + x[1]) / 0.2e1 + sin(x[0]) * (pow(cos(x[0]), 0.3e1) * pow(d2, 0.4e1) * g * pow(l1, 0.3e1) * pow(m2, 0.4e1) - 0.3e1 / 0.4e1 * d2 * d2 * l1 * l1 * m2 * m2 * x[3] * (x[2] - x[3]) * pow(cos(x[0]), 0.2e1) + (((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * d2 * d2 * g * m2 * m2 * l1 * cos(x[0]) + x[3] * (x[2] - x[3]) * (0.2e1 * d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) / 0.4e1) / 0.2e1) * l1 * sin(x[0] + x[1]) + (pow(cos(x[0]), 0.4e1) * pow(d2, 0.4e1) * g * pow(l1, 0.4e1) * pow(m2, 0.4e1) / 0.8e1 - d2 * d2 * pow(l1, 0.3e1) * m2 * m2 * x[3] * (x[2] - x[3]) * pow(cos(x[0]), 0.3e1) / 0.8e1 + (((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 / 0.4e1 + J2 * (d1 * d1 * m1 + J1) / 0.4e1) * d2 * d2 * g * m2 * m2 * l1 * l1 * pow(cos(x[0]), 0.2e1) + x[3] * (x[2] - x[3]) * l1 * (0.2e1 * d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * cos(x[0]) / 0.8e1 + g * pow(((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1), 0.2e1) / 0.8e1) * cos(x[0] + x[1])) * m2 / (0.8e1 * pow(l1, 0.4e1) * pow(m2, 0.4e1) * (0.1e1 / 0.8e1 + pow(cos(x[0]), 0.4e1) - pow(cos(x[0]), 0.2e1)) * pow(d2, 0.4e1) * pow(cos(x[0] + x[1]), 0.4e1) + 0.8e1 * pow(l1, 0.4e1) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * sin(x[0]) * pow(m2, 0.4e1) * cos(x[0]) * sin(x[0] + x[1]) * pow(d2, 0.4e1) * pow(cos(x[0] + x[1]), 0.3e1) - 0.8e1 * l1 * l1 * m2 * m2 * (pow(cos(x[0]), 0.4e1) * d2 * d2 * l1 * l1 * m2 * m2 + (-0.3e1 / 0.4e1 * d2 * d2 * m2 * m2 * l1 * l1 + (J2 * l1 * l1 / 0.2e1 + (d1 * d1 * m1 / 0.2e1 + J1 / 0.2e1) * d2 * d2) * m2 + J2 * (d1 * d1 * m1 + J1) / 0.2e1) * pow(cos(x[0]), 0.2e1) + (-J2 * l1 * l1 / 0.4e1 - (d1 * d1 * m1 / 0.4e1 + J1 / 0.4e1) * d2 * d2) * m2 - J2 * (d1 * d1 * m1 + J1) / 0.4e1) * d2 * d2 * pow(cos(x[0] + x[1]), 0.2e1) - 0.4e1 * l1 * l1 * sin(x[0]) * m2 * m2 * cos(x[0]) * (pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * sin(x[0] + x[1]) * d2 * d2 * cos(x[0] + x[1]) + pow(pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1), 0.2e1)) + 0.8e1 * d2 * (-cos(x[0]) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * pow(d2, 0.4e1) * g * sin(x[0]) * pow(m2, 0.4e1) * pow(l1, 0.4e1) * pow(cos(x[0] + x[1]), 0.5e1) + sin(x[0] + x[1]) * pow(d2, 0.4e1) * g * pow(l1, 0.4e1) * pow(m2, 0.4e1) * (0.1e1 / 0.8e1 + pow(cos(x[0]), 0.4e1) - pow(cos(x[0]), 0.2e1)) * pow(cos(x[0] + x[1]), 0.4e1) + 0.3e1 / 0.2e1 * d2 * d2 * sin(x[0]) * m2 * m2 * l1 * l1 * (pow(cos(x[0]), 0.3e1) * d2 * d2 * g * l1 * l1 * m2 * m2 - l1 * x[3] * (x[2] - x[3]) * pow(cos(x[0]), 0.2e1) / 0.3e1 + g * (-d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * cos(x[0]) / 0.3e1 + x[3] * l1 * (x[2] - x[3]) / 0.12e2) * pow(cos(x[0] + x[1]), 0.3e1) - d2 * m2 * (d2 * (pow(cos(x[0]), 0.4e1) * d2 * d2 * g * l1 * l1 * m2 * m2 - l1 * x[3] * (x[2] - x[3]) * pow(cos(x[0]), 0.3e1) / 0.2e1 + (-0.3e1 / 0.4e1 * d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 / 0.2e1 + J2 * (d1 * d1 * m1 + J1) / 0.2e1) * g * pow(cos(x[0]), 0.2e1) + 0.3e1 / 0.8e1 * l1 * x[3] * (x[2] - x[3]) * cos(x[0]) - g * (((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) / 0.4e1) * m2 * sin(x[0] + x[1]) - ((pow(x[3], 0.2e1) * l1 * l1 + d2 * d2 * pow(x[2] - x[3], 0.2e1)) * m2 / 0.4e1 + pow(x[2] - x[3], 0.2e1) * J2 / 0.4e1 + pow(x[3], 0.2e1) * (d1 * d1 * m1 + J1) / 0.4e1) * cos(x[0]) * sin(x[0])) * l1 * l1 * pow(cos(x[0] + x[1]), 0.2e1) - (((pow(x[3], 0.2e1) * l1 * l1 + d2 * d2 * pow(x[2] - x[3], 0.2e1)) * m2 / 0.2e1 + pow(x[2] - x[3], 0.2e1) * J2 / 0.2e1 + pow(x[3], 0.2e1) * (d1 * d1 * m1 + J1) / 0.2e1) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * d2 * m2 * l1 * sin(x[0] + x[1]) / 0.2e1 + sin(x[0]) * (pow(cos(x[0]), 0.3e1) * pow(d2, 0.4e1) * g * pow(l1, 0.3e1) * pow(m2, 0.4e1) - 0.3e1 / 0.4e1 * d2 * d2 * l1 * l1 * m2 * m2 * x[3] * (x[2] - x[3]) * pow(cos(x[0]), 0.2e1) + (((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * d2 * d2 * g * m2 * m2 * l1 * cos(x[0]) + x[3] * (x[2] - x[3]) * (0.2e1 * d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) / 0.4e1) / 0.2e1) * l1 * cos(x[0] + x[1]) + (pow(cos(x[0]), 0.4e1) * pow(d2, 0.4e1) * g * pow(l1, 0.4e1) * pow(m2, 0.4e1) / 0.8e1 - d2 * d2 * pow(l1, 0.3e1) * m2 * m2 * x[3] * (x[2] - x[3]) * pow(cos(x[0]), 0.3e1) / 0.8e1 + (((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 / 0.4e1 + J2 * (d1 * d1 * m1 + J1) / 0.4e1) * d2 * d2 * g * m2 * m2 * l1 * l1 * pow(cos(x[0]), 0.2e1) + x[3] * (x[2] - x[3]) * l1 * (0.2e1 * d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * cos(x[0]) / 0.8e1 + g * pow(((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1), 0.2e1) / 0.8e1) * sin(x[0] + x[1]) - ((pow(x[3], 0.2e1) * l1 * l1 + d2 * d2 * pow(x[2] - x[3], 0.2e1)) * m2 / 0.8e1 + pow(x[2] - x[3], 0.2e1) * J2 / 0.8e1 + pow(x[3], 0.2e1) * (d1 * d1 * m1 + J1) / 0.8e1) * cos(x[0]) * d2 * sin(x[0]) * m2 * l1 * l1) * m2 * pow(0.8e1 * pow(l1, 0.4e1) * pow(m2, 0.4e1) * (0.1e1 / 0.8e1 + pow(cos(x[0]), 0.4e1) - pow(cos(x[0]), 0.2e1)) * pow(d2, 0.4e1) * pow(cos(x[0] + x[1]), 0.4e1) + 0.8e1 * pow(l1, 0.4e1) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * sin(x[0]) * pow(m2, 0.4e1) * cos(x[0]) * sin(x[0] + x[1]) * pow(d2, 0.4e1) * pow(cos(x[0] + x[1]), 0.3e1) - 0.8e1 * l1 * l1 * m2 * m2 * (pow(cos(x[0]), 0.4e1) * d2 * d2 * l1 * l1 * m2 * m2 + (-0.3e1 / 0.4e1 * d2 * d2 * m2 * m2 * l1 * l1 + (J2 * l1 * l1 / 0.2e1 + (d1 * d1 * m1 / 0.2e1 + J1 / 0.2e1) * d2 * d2) * m2 + J2 * (d1 * d1 * m1 + J1) / 0.2e1) * pow(cos(x[0]), 0.2e1) + (-J2 * l1 * l1 / 0.4e1 - (d1 * d1 * m1 / 0.4e1 + J1 / 0.4e1) * d2 * d2) * m2 - J2 * (d1 * d1 * m1 + J1) / 0.4e1) * d2 * d2 * pow(cos(x[0] + x[1]), 0.2e1) - 0.4e1 * l1 * l1 * sin(x[0]) * m2 * m2 * cos(x[0]) * (pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * sin(x[0] + x[1]) * d2 * d2 * cos(x[0] + x[1]) + pow(pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1), 0.2e1), -0.2e1) * (-0.32e2 * pow(l1, 0.4e1) * pow(m2, 0.4e1) * (0.1e1 / 0.8e1 + pow(cos(x[0]), 0.4e1) - pow(cos(x[0]), 0.2e1)) * pow(d2, 0.4e1) * pow(cos(x[0] + x[1]), 0.3e1) * sin(x[0] + x[1]) + 0.8e1 * pow(l1, 0.4e1) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * sin(x[0]) * pow(m2, 0.4e1) * cos(x[0]) * pow(cos(x[0] + x[1]), 0.4e1) * pow(d2, 0.4e1) - 0.24e2 * pow(l1, 0.4e1) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * sin(x[0]) * pow(m2, 0.4e1) * cos(x[0]) * pow(sin(x[0] + x[1]), 0.2e1) * pow(d2, 0.4e1) * pow(cos(x[0] + x[1]), 0.2e1) + 0.16e2 * l1 * l1 * m2 * m2 * (pow(cos(x[0]), 0.4e1) * d2 * d2 * l1 * l1 * m2 * m2 + (-0.3e1 / 0.4e1 * d2 * d2 * m2 * m2 * l1 * l1 + (J2 * l1 * l1 / 0.2e1 + (d1 * d1 * m1 / 0.2e1 + J1 / 0.2e1) * d2 * d2) * m2 + J2 * (d1 * d1 * m1 + J1) / 0.2e1) * pow(cos(x[0]), 0.2e1) + (-J2 * l1 * l1 / 0.4e1 - (d1 * d1 * m1 / 0.4e1 + J1 / 0.4e1) * d2 * d2) * m2 - J2 * (d1 * d1 * m1 + J1) / 0.4e1) * d2 * d2 * cos(x[0] + x[1]) * sin(x[0] + x[1]) - 0.4e1 * l1 * l1 * sin(x[0]) * m2 * m2 * cos(x[0]) * (pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * pow(cos(x[0] + x[1]), 0.2e1) * d2 * d2 + 0.4e1 * l1 * l1 * sin(x[0]) * m2 * m2 * cos(x[0]) * (pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * pow(sin(x[0] + x[1]), 0.2e1) * d2 * d2));
	hx[2] = -(x[2] - xf[2]) * q[2] - lmd[0] * (d2 * d2 * m2 + J2) / (-(0.2e1 * pow(cos(x[0]), 0.2e1) - 0.1e1) * l1 * l1 * m2 * m2 * d2 * d2 * pow(cos(x[0] + x[1]), 0.2e1) - 0.2e1 * cos(x[0]) * cos(x[0] + x[1]) * sin(x[0]) * sin(x[0] + x[1]) * d2 * d2 * l1 * l1 * m2 * m2 + pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) - lmd[1] * (-cos(x[0]) * d2 * l1 * m2 * cos(x[0] + x[1]) - sin(x[0]) * d2 * l1 * m2 * sin(x[0] + x[1]) - d2 * d2 * m2 - J2) / (-(0.2e1 * pow(cos(x[0]), 0.2e1) - 0.1e1) * l1 * l1 * m2 * m2 * d2 * d2 * pow(cos(x[0] + x[1]), 0.2e1) - 0.2e1 * cos(x[0]) * cos(x[0] + x[1]) * sin(x[0]) * sin(x[0] + x[1]) * d2 * d2 * l1 * l1 * m2 * m2 + pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) + 0.8e1 * lmd[3] * d2 * (0.3e1 / 0.2e1 * d2 * d2 * sin(x[0]) * m2 * m2 * l1 * l1 * (-l1 * x[3] * pow(cos(x[0]), 0.2e1) / 0.3e1 + x[3] * l1 / 0.12e2) * pow(cos(x[0] + x[1]), 0.3e1) - d2 * m2 * (d2 * (-l1 * x[3] * pow(cos(x[0]), 0.3e1) / 0.2e1 + 0.3e1 / 0.8e1 * l1 * x[3] * cos(x[0])) * m2 * sin(x[0] + x[1]) - (d2 * d2 * (x[2] - x[3]) * m2 / 0.2e1 + (x[2] - x[3]) * J2 / 0.2e1) * cos(x[0]) * sin(x[0])) * l1 * l1 * pow(cos(x[0] + x[1]), 0.2e1) - ((d2 * d2 * (x[2] - x[3]) * m2 + (x[2] - x[3]) * J2) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * d2 * m2 * l1 * sin(x[0] + x[1]) / 0.2e1 + sin(x[0]) * (-0.3e1 / 0.4e1 * d2 * d2 * l1 * l1 * m2 * m2 * x[3] * pow(cos(x[0]), 0.2e1) + x[3] * (0.2e1 * d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) / 0.4e1) / 0.2e1) * l1 * cos(x[0] + x[1]) + (-d2 * d2 * pow(l1, 0.3e1) * m2 * m2 * x[3] * pow(cos(x[0]), 0.3e1) / 0.8e1 + x[3] * l1 * (0.2e1 * d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * cos(x[0]) / 0.8e1) * sin(x[0] + x[1]) - (d2 * d2 * (x[2] - x[3]) * m2 / 0.4e1 + (x[2] - x[3]) * J2 / 0.4e1) * cos(x[0]) * d2 * sin(x[0]) * m2 * l1 * l1) * m2 / (0.8e1 * pow(l1, 0.4e1) * pow(m2, 0.4e1) * (0.1e1 / 0.8e1 + pow(cos(x[0]), 0.4e1) - pow(cos(x[0]), 0.2e1)) * pow(d2, 0.4e1) * pow(cos(x[0] + x[1]), 0.4e1) + 0.8e1 * pow(l1, 0.4e1) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * sin(x[0]) * pow(m2, 0.4e1) * cos(x[0]) * sin(x[0] + x[1]) * pow(d2, 0.4e1) * pow(cos(x[0] + x[1]), 0.3e1) - 0.8e1 * l1 * l1 * m2 * m2 * (pow(cos(x[0]), 0.4e1) * d2 * d2 * l1 * l1 * m2 * m2 + (-0.3e1 / 0.4e1 * d2 * d2 * m2 * m2 * l1 * l1 + (J2 * l1 * l1 / 0.2e1 + (d1 * d1 * m1 / 0.2e1 + J1 / 0.2e1) * d2 * d2) * m2 + J2 * (d1 * d1 * m1 + J1) / 0.2e1) * pow(cos(x[0]), 0.2e1) + (-J2 * l1 * l1 / 0.4e1 - (d1 * d1 * m1 / 0.4e1 + J1 / 0.4e1) * d2 * d2) * m2 - J2 * (d1 * d1 * m1 + J1) / 0.4e1) * d2 * d2 * pow(cos(x[0] + x[1]), 0.2e1) - 0.4e1 * l1 * l1 * sin(x[0]) * m2 * m2 * cos(x[0]) * (pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * sin(x[0] + x[1]) * d2 * d2 * cos(x[0] + x[1]) + pow(pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1), 0.2e1));
	hx[3] = -(x[3] - xf[3]) * q[3] - lmd[0] * (-cos(x[0]) * d2 * l1 * m2 * cos(x[0] + x[1]) - sin(x[0]) * d2 * l1 * m2 * sin(x[0] + x[1]) - d2 * d2 * m2 - J2) / (-(0.2e1 * pow(cos(x[0]), 0.2e1) - 0.1e1) * l1 * l1 * m2 * m2 * d2 * d2 * pow(cos(x[0] + x[1]), 0.2e1) - 0.2e1 * cos(x[0]) * cos(x[0] + x[1]) * sin(x[0]) * sin(x[0] + x[1]) * d2 * d2 * l1 * l1 * m2 * m2 + pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) - lmd[1] * (0.2e1 * cos(x[0]) * d2 * l1 * m2 * cos(x[0] + x[1]) + 0.2e1 * sin(x[0]) * d2 * l1 * m2 * sin(x[0] + x[1]) + (d2 * d2 + l1 * l1) * m2 + d1 * d1 * m1 + J1 + J2) / (-(0.2e1 * pow(cos(x[0]), 0.2e1) - 0.1e1) * l1 * l1 * m2 * m2 * d2 * d2 * pow(cos(x[0] + x[1]), 0.2e1) - 0.2e1 * cos(x[0]) * cos(x[0] + x[1]) * sin(x[0]) * sin(x[0] + x[1]) * d2 * d2 * l1 * l1 * m2 * m2 + pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) + 0.8e1 * lmd[3] * d2 * (0.3e1 / 0.2e1 * d2 * d2 * sin(x[0]) * m2 * m2 * l1 * l1 * (-l1 * (x[2] - x[3]) * pow(cos(x[0]), 0.2e1) / 0.3e1 + l1 * x[3] * pow(cos(x[0]), 0.2e1) / 0.3e1 + l1 * (x[2] - x[3]) / 0.12e2 - x[3] * l1 / 0.12e2) * pow(cos(x[0] + x[1]), 0.3e1) - d2 * m2 * (d2 * (-l1 * (x[2] - x[3]) * pow(cos(x[0]), 0.3e1) / 0.2e1 + l1 * x[3] * pow(cos(x[0]), 0.3e1) / 0.2e1 + 0.3e1 / 0.8e1 * l1 * (x[2] - x[3]) * cos(x[0]) - 0.3e1 / 0.8e1 * l1 * x[3] * cos(x[0])) * m2 * sin(x[0] + x[1]) - ((0.2e1 * x[3] * l1 * l1 - 0.2e1 * d2 * d2 * (x[2] - x[3])) * m2 / 0.4e1 - (x[2] - x[3]) * J2 / 0.2e1 + x[3] * (d1 * d1 * m1 + J1) / 0.2e1) * cos(x[0]) * sin(x[0])) * l1 * l1 * pow(cos(x[0] + x[1]), 0.2e1) - (((0.2e1 * x[3] * l1 * l1 - 0.2e1 * d2 * d2 * (x[2] - x[3])) * m2 / 0.2e1 - (x[2] - x[3]) * J2 + x[3] * (d1 * d1 * m1 + J1)) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * d2 * m2 * l1 * sin(x[0] + x[1]) / 0.2e1 + sin(x[0]) * (-0.3e1 / 0.4e1 * d2 * d2 * l1 * l1 * m2 * m2 * (x[2] - x[3]) * pow(cos(x[0]), 0.2e1) + 0.3e1 / 0.4e1 * d2 * d2 * l1 * l1 * m2 * m2 * x[3] * pow(cos(x[0]), 0.2e1) + (x[2] - x[3]) * (0.2e1 * d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) / 0.4e1 - x[3] * (0.2e1 * d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) / 0.4e1) / 0.2e1) * l1 * cos(x[0] + x[1]) + (-d2 * d2 * pow(l1, 0.3e1) * m2 * m2 * (x[2] - x[3]) * pow(cos(x[0]), 0.3e1) / 0.8e1 + d2 * d2 * pow(l1, 0.3e1) * m2 * m2 * x[3] * pow(cos(x[0]), 0.3e1) / 0.8e1 + (x[2] - x[3]) * l1 * (0.2e1 * d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * cos(x[0]) / 0.8e1 - x[3] * l1 * (0.2e1 * d2 * d2 * m2 * m2 * l1 * l1 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * cos(x[0]) / 0.8e1) * sin(x[0] + x[1]) - ((0.2e1 * x[3] * l1 * l1 - 0.2e1 * d2 * d2 * (x[2] - x[3])) * m2 / 0.8e1 - (x[2] - x[3]) * J2 / 0.4e1 + x[3] * (d1 * d1 * m1 + J1) / 0.4e1) * cos(x[0]) * d2 * sin(x[0]) * m2 * l1 * l1) * m2 / (0.8e1 * pow(l1, 0.4e1) * pow(m2, 0.4e1) * (0.1e1 / 0.8e1 + pow(cos(x[0]), 0.4e1) - pow(cos(x[0]), 0.2e1)) * pow(d2, 0.4e1) * pow(cos(x[0] + x[1]), 0.4e1) + 0.8e1 * pow(l1, 0.4e1) * (pow(cos(x[0]), 0.2e1) - 0.1e1 / 0.2e1) * sin(x[0]) * pow(m2, 0.4e1) * cos(x[0]) * sin(x[0] + x[1]) * pow(d2, 0.4e1) * pow(cos(x[0] + x[1]), 0.3e1) - 0.8e1 * l1 * l1 * m2 * m2 * (pow(cos(x[0]), 0.4e1) * d2 * d2 * l1 * l1 * m2 * m2 + (-0.3e1 / 0.4e1 * d2 * d2 * m2 * m2 * l1 * l1 + (J2 * l1 * l1 / 0.2e1 + (d1 * d1 * m1 / 0.2e1 + J1 / 0.2e1) * d2 * d2) * m2 + J2 * (d1 * d1 * m1 + J1) / 0.2e1) * pow(cos(x[0]), 0.2e1) + (-J2 * l1 * l1 / 0.4e1 - (d1 * d1 * m1 / 0.4e1 + J1 / 0.4e1) * d2 * d2) * m2 - J2 * (d1 * d1 * m1 + J1) / 0.4e1) * d2 * d2 * pow(cos(x[0] + x[1]), 0.2e1) - 0.4e1 * l1 * l1 * sin(x[0]) * m2 * m2 * cos(x[0]) * (pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1)) * sin(x[0] + x[1]) * d2 * d2 * cos(x[0] + x[1]) + pow(pow(cos(x[0]), 0.2e1) * d2 * d2 * l1 * l1 * m2 * m2 + ((d1 * d1 * m1 + J1) * d2 * d2 + J2 * l1 * l1) * m2 + J2 * (d1 * d1 * m1 + J1), 0.2e1));
}


void nmpc_model::hufunc(const double t, const Eigen::VectorXd& x, const Eigen::VectorXd& u, const Eigen::VectorXd& lmd, Eigen::VectorXd& hu)
{
	hu[0] = r[0] * u[0] + lmd[2];
	hu[1] = r[1] * u[1] + lmd[3];
}


